@{
    ViewData["Title"] = "Home Page";
}



<div class="mb-4">
    <h5>Popular Tags</h5>
    <div class="tag-cloud fs-5">
        @if (ViewBag.Tags is List<Tag> tags && tags.Count > 0)
        {
            @foreach (var tag in tags)
            {
                <a href="javascript:void(0);" class="badge bg-primary text-white tag-link"
                   onclick="filterByTag('@tag.TName')">
                    @tag.TName
                </a>
            }
        }
        else
        {
            <p class="text-muted">No popular tags found.</p>
        }
    </div>
</div>


<div id="filteredTag" class="mb-3" style="display: none;">
    <h5>Templates tagged with: <span id="selectedTag" class="text-primary"></span></h5>
    <button class="btn btn-secondary btn-sm" onclick="clearFilter()">Clear Filter</button>
</div>

@using FormsWebApplication.Models
@model List<Template> 

@if (Model != null && Model.Count > 0) 
{
    <div class="row row-cols-1 row-cols-md-3 g-4" id="templateContainer">
        @foreach (var template in Model)
        {
            <partial name="_TemplateCardPartial" model="template" />
        }
    </div>
}
else
{
    <p class="text-center text-muted">No templates found.</p>
}



<div class="text-center mt-3">
    <button id="loadMoreBtn" class="btn btn-primary" onclick="loadMoreTemplates()">Load More</button>
</div>


<script>
        let page = 1;
        let selectedTag = null;

        async function loadMoreTemplates() {
            let url = selectedTag
                ? `/Home/TemplatesByTag?tag=${encodeURIComponent(selectedTag)}&page=${page}`
                : `/Home/LoadMoreTemplates?page=${page}`;

            let button = document.getElementById("loadMoreBtn");
            button.disabled = true;
            button.innerText = "Loading...";

            try {
                let response = await fetch(url);
                if (response.ok) {
                    let html = await response.text();
                    document.getElementById("templateContainer").insertAdjacentHTML("beforeend", html);
                    page++;
                } else {
                    button.style.display = "none"; 
                }
            } catch (error) {
                console.error("Error loading templates:", error);
            }

            button.innerText = "Load More";
            button.disabled = true;
        }

    async function filterByTag(tagName) {
        selectedTag = tagName;
        page = 1;
            let filteredTagDiv = document.getElementById("filteredTag");
    document.getElementById("selectedTag").textContent = tagName;
    filteredTagDiv.style.display = "block";
        try {
            let response = await fetch(`/Home/FilterTemplates?tag=${encodeURIComponent(tagName)}`);
            if (response.ok) {
                let html = await response.text();
                document.getElementById("templateContainer").innerHTML = html;
            } else {
                console.error("Failed to load templates.");
            }
        } catch (error) {
            console.error("Error fetching templates:", error);
        }
    }

    function clearFilter() {
        window.location.href = "/Home/Index"; 
    }

</script>
