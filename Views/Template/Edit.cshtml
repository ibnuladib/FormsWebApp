@model FormsWebApplication.Models.Template

@{
    ViewData["Title"] = "Edit Template";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h1>Edit Template</h1>
<hr />
<div class="row">
    <div class="col-md-8">
        <form asp-action="Edit">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <input type="hidden" asp-for="Id" />

            <div class="form-group">
                <label asp-for="Title" class="control-label"></label>
                <input asp-for="Title" class="form-control" />
                <span asp-validation-for="Title" class="text-danger"></span>
            </div>

            <div class="form-group">
                <label asp-for="Author" class="control-label"></label>
                <input asp-for="Author" class="form-control" readonly />
            </div>

            <hr />
            <h4>Questions</h4>

            @for (int i = 1; i <= 4; i++)
            {
                <div class="form-group">
                    <div class="form-check">
                        <input class="form-check-input" type="checkbox" asp-for="@(Model.GetType().GetProperty($"CustomString{i}State").GetValue(Model))" />
                        <label class="form-check-label">Enable Text Question @i</label>
                    </div>
                    <input asp-for="@(Model.GetType().GetProperty($"CustomString{i}Question").GetValue(Model))" class="form-control" placeholder="Enter question text" />
                </div>
            }

            @for (int i = 1; i <= 4; i++)
            {
                <div class="form-group">
                    <div class="form-check">
                        <input class="form-check-input" type="checkbox" asp-for="@(Model.GetType().GetProperty($"CustomMultiLine{i}State").GetValue(Model))" />
                        <label class="form-check-label">Enable Multi-line Question @i</label>
                    </div>
                    <textarea asp-for="@(Model.GetType().GetProperty($"CustomMultiLine{i}Question").GetValue(Model))" class="form-control" placeholder="Enter question text"></textarea>
                </div>
            }

            @for (int i = 1; i <= 4; i++)
            {
                <div class="form-group">
                    <div class="form-check">
                        <input class="form-check-input" type="checkbox" asp-for="@(Model.GetType().GetProperty($"CustomInt{i}State").GetValue(Model))" />
                        <label class="form-check-label">Enable Numeric Question @i</label>
                    </div>
                    <input asp-for="@(Model.GetType().GetProperty($"CustomInt{i}Question").GetValue(Model))" class="form-control" type="number" placeholder="Enter a number" />
                </div>
            }

            @for (int i = 1; i <= 4; i++)
            {
                <div class="form-group">
                    <div class="form-check">
                        <input class="form-check-input" type="checkbox" asp-for="@(Model.GetType().GetProperty($"CustomCheckbox{i}State").GetValue(Model))" />
                        <label class="form-check-label">Enable Checkbox Question @i</label>
                    </div>
                    <input asp-for="@(Model.GetType().GetProperty($"CustomCheckbox{i}Question").GetValue(Model))" class="form-control" placeholder="Enter question text" />
                </div>
            }

            <div class="form-group mt-3">
                <button type="submit" class="btn btn-primary">Save Changes</button>
                <a asp-action="Index" class="btn btn-secondary">Back to List</a>
            </div>
        </form>
    </div>
</div>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
}
